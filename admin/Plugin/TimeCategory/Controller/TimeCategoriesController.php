<?phpclass TimeCategoriesController extends TimeCategoryAppController {/** * Controller name * * @var string */	var $name = 'TimeCategory';/** * Helpers * * @var array */	public $helpers = array('Html', 'Form', 'Session', 'Time', 'Text');	//public $paginate = array('limit'=>5,'order'=>'ServiceCategory.id','page'=>1);/** * Components * * @var array */		public $components 	= 	array('Auth', 'Session', 'Email', 'Cookie', 'Search.Prg', 'RequestHandler');			public $presetVars = array(		array('field' => 'name', 'type' => 'value')	);	 // public $presetVars = 	true;	 				public function beforeFilter() {		parent::beforeFilter();		$this->set('model', $this->modelClass);	}	public function index() {				 $this->set('tab_open', 'fares');		 $this->set("title_for_layout", "Hold Booking Option & Cancellation Charges");			    $this->{$this->modelClass}->bindModel(array('hasMany' => array('CancelChargeManagement')));		$HoldBookingData = $this->{$this->modelClass}->find("all");		$this->set('HoldBookingData',$HoldBookingData);		//pr($HoldBookingData);		 if (!empty($this->data)) {				//pr($this->data); exit;				$data_rate = array();				$data = $this->data;                $this->loadModel('CancelChargeManagement');											//$this->CancelChargeManagement->deleteAll(array('CancelChargeManagement.time_category_id <' =>'10'));				$this->CancelChargeManagement->query('TRUNCATE TABLE cancel_charge_managements');                if (!empty($data)) {						$i=1;							foreach ($data['TimeCategory'] as $key => $index) {							    $rt_dtls = array();																$this->TimeCategory->updateAll(array('TimeCategory.cancel_charges' => $index['cancel_charges']), array('TimeCategory.id' => $index['id']));																//logs                                                                $text_action = "updated";                                                                $json_data = json_encode($this->request->data);                                                                $this->global_logs("time_categories", $index['id'], 1, $text_action, $json_data);								if($index['oneway']){									$rt_dtls['time_category_id'] = $index['id'];									$rt_dtls['farecategory_id'] = 4;									if(empty($index['oneway']['charges'])){										$rt_dtls['charges'] = 0;									}else{										$rt_dtls['charges'] = $index['oneway']['charges'];									}									$this->CancelChargeManagement->create();									$this->CancelChargeManagement->save($rt_dtls);								}								if($index['onewayfixed']){									$rt_dtls['time_category_id'] = $index['id'];									$rt_dtls['farecategory_id'] = 6;									if(empty($index['onewayfixed']['charges'])){										$rt_dtls['charges'] = 0;									}else{										$rt_dtls['charges'] = $index['onewayfixed']['charges'];									}																												$this->CancelChargeManagement->create();									$this->CancelChargeManagement->save($rt_dtls);								}								if($index['round']){									$rt_dtls['time_category_id'] = $index['id'];									$rt_dtls['farecategory_id'] = 3	;									if(empty($index['round']['charges'])){										$rt_dtls['charges'] = 0;									}else{										$rt_dtls['charges'] = $index['round']['charges'];									}																											$this->CancelChargeManagement->create();									$this->CancelChargeManagement->save($rt_dtls);								}								if($index['daypackage']){									$rt_dtls['time_category_id'] = $index['id'];									$rt_dtls['farecategory_id'] = 1;									if(empty($index['daypackage']['charges'])){										$rt_dtls['charges'] = 0;									}else{										$rt_dtls['charges'] = $index['daypackage']['charges'];									}									//$rt_dtls['charges'] = $index['daypackage']['charges'];																		$this->CancelChargeManagement->create();									$this->CancelChargeManagement->save($rt_dtls);								}															$i++;							}					}											$this->Session->setFlash('Hold booking charges has been updated successfully', 'success');				$this->redirect(array('plugin' => 'time_category', 'controller' => 'time_categories', 'action' => 'index'));		 }		}		function edit_one_way_fixed($id = '') {        $this->set('tab_open', 'fares');        $pages[__('Dashboard', true)] = array('plugin' => false, 'controller' => '/');        $breadcrumb = array('pages' => $pages, 'active' => __('Rate Management', true));        $this->set('breadcrumb', $breadcrumb);        $pageHeading = 'Rate Management';        $this->set('pageHeading', $pageHeading);        $this->set('id', $id);        $user = $this->{$this->modelClass}->findById($id);        //pr($user);        $this->{$this->modelClass}->set($user);        $this->set('record', $user);        if (!empty($this->data)) {            $data_rate = array();            $data_rate['Rate']['id'] = $this->data['Rate']['id'];            $data_rate['Rate']['modified'] = date("Y-m-d H:i:s");            $data_rate['Rate']['minimum_km'] = $this->data['Rate']['minimum_km'];            $this->loadModel('RateDetail');            //pr($this->data);            // exit;            //ends//            if ($this->{$this->modelClass}->save($data_rate, false)) {                $this->RateDetail->deleteAll(array('RateDetail.rate_id' => $this->data['Rate']['id']));                $rate_id = $this->{$this->modelClass}->id;                $RateDetail = $this->data['RateDetail'];                $rt_dtls['RateDetail']['rate_id'] = $rate_id;                if (!empty($RateDetail)) {                    foreach ($RateDetail as $values) {                        if ($values['base_fare_cust'] && $values['base_fare_cust'] != 0) {                            $this->RateDetail->create();                            $rt_dtls['RateDetail']['motortype_id'] = $values['motortype_id'];                            $rt_dtls['RateDetail']['base_fare_cust'] = $values['base_fare_cust'];                            $rt_dtls['RateDetail']['base_fare_vend'] = $values['base_fare_vend'];                            $diff_amount = $values['base_fare_cust'] - $values['base_fare_vend'];                            $rt_dtls['RateDetail']['company_margin_amount'] = $diff_amount;                            $company_margin_percent = 100 * $diff_amount / $values['base_fare_cust'];                            $company_margin_percent = number_format($company_margin_percent, 2);                            $rt_dtls['RateDetail']['company_margin_percent'] = $company_margin_percent;                            //$rt_dtls['RateDetail']['base_fare_vend_mbg'] = $values['base_fare_vend_mbg'];                            $rt_dtls['RateDetail']['total_toll_tax'] = $values['total_toll_tax'];                            $rt_dtls['RateDetail']['after_min_km_fare_cust'] = $values['after_min_km_fare_cust'];                            $rt_dtls['RateDetail']['after_min_km_fare_vend'] = $values['after_min_km_fare_vend'];                            $rt_dtls['RateDetail']['g_to_g'] = $values['g_to_g'] ? $values['g_to_g'] : 0;                            $rt_dtls['RateDetail']['show_on_front'] = $values['show_on_front'] ? $values['show_on_front'] : 0;                            $rt_dtls['RateDetail']['not_refundable'] = $values['not_refundable'] ? $values['not_refundable'] : 0;                            $rt_dtls['RateDetail']['taxi_unavailable'] = $values['taxi_unavailable'] ? $values['taxi_unavailable'] : 0;                            $rt_dtls['RateDetail']['max_discount'] = $values['max_discount'];                            $this->RateDetail->saveAll($rt_dtls);                        }                    }                    $text_action = "updated";                    $json_data = json_encode($this->request->data);                    $this->global_logs("rates", $rate_id, 1, $text_action, $json_data);                    $this->Session->setFlash('Rates for '.$user['City']['name'].' - '.$user['Rate']['destination'].' have been updated', 'success');                    $this->redirect(array('action' => 'one_way_fixed'));                }            }        } else {            $data_arr = $this->{$this->modelClass}->read();            $new_arr = array();            if (!empty($data_arr['RateDetail'])) {                foreach ($data_arr['RateDetail'] as $ind => $val) {                    $new_arr[$val['motortype_id']] = $val;                    $new_arr[$val['motortype_id']]['gtoqprice'] = 20*$val['after_min_km_fare_cust'];                     if($val['max_discount']=='')                     $new_arr[$val['motortype_id']]['max_discount'] = (20*$val['after_min_km_fare_cust']+$val['base_fare_cust'])-$val['base_fare_vend'];                                    }            }            $data_arr['RateDetail'] = $new_arr;            $this->request->data = $data_arr;        }        $this->set("title_for_layout", "Edit One Way (Fixed) Rate");    }}