<?php/** * @license MIT License (http://www.opensource.org/licenses/mit-license.php) * * PHP version 5 * CakePHP version 1.3 *//** * MotorTypes Users Controller * * @package MotorTypes * @subpackage users.controllers */class DistrictsController extends DistrictAppController {    /**     * Controller name     *     * @var string     */    var $name = 'Districts';    /**     * Helpers     *     * @var array     */    public $helpers = array('Html', 'Form', 'Session', 'Time', 'Text');    //public $paginate = array('limit'=>5,'order'=>'MotorType.id','page'=>1);    /**     * Components     *     * @var array     */    public $components = array('Auth', 'Session', 'Email', 'Cookie', 'Search.Prg', 'RequestHandler');    public $presetVars = array(        array('field' => 'name', 'type' => 'value')    );    // public $presetVars = 	true;    public function beforeFilter() {        parent::beforeFilter();        $this->set('tab_open', 'sys_masters');        $this->set('model', $this->modelClass);        $this->loadModel('State');        $state_list = $this->State->find('list', array(            'conditions' => array(                'is_active' => 1,            ),        ));        $this->set('state_list', $state_list);    }    /**     * Admin Index     *     * @return void     */    function index() {//echo "yo";die;        // Breadcrumb        if (!empty($this->data)) {            $this->Prg->commonProcess();        }        $page = ((isset($this->params->named['page']) && $this->params->named['page'] != "") ? $this->params->named['page'] : 0);        $limitValue = $limit = 50;        $this->set('limitValue', $limitValue);        $this->set('limit', $limit);        $this->{$this->modelClass}->data[$this->modelClass] = $this->passedArgs;        $parsedConditions = $this->{$this->modelClass}->parseCriteria($this->passedArgs);        if (!empty($this->request->query)) {            if (isset($this->request->query['state_id']) && $this->request->query['state_id'] != "") {                array_push($parsedConditions, array('District.state_id' => $this->request->query['state_id']));                $this->set("state_id", $this->request->query['state_id']);            }        }        $this->paginate = array(            'conditions' => array($parsedConditions),            'limit' => $limit,            'order' => array($this->modelClass . '.id' => 'desc')        );        //pr($this->paginate());        $this->set('result', $this->paginate());        $this->set('page', $page);        $this->set('title_for_layout', 'Districts');    }    function add() {        if (!empty($this->data)) {            $this->{$this->modelClass}->set($this->data);            //if ($this->{$this->modelClass}->validateAdd()) {            //pr($this->data);exit;            if ($this->data['LanguageMapDistrict'][1]['name']) {                $chks = $this->{$this->modelClass}->find('count', array('conditions' => array('District.state_id' => $this->data['District']['state_id'],'District.name' => $this->data['LanguageMapDistrict'][1]['name'])));                // echo "ffff";                //pr($chks);exit;                if (empty($chks)) {                    $datas = array(                        'name' => $this->data['LanguageMapDistrict'][1]['name'],                        'state_id' => $this->data['District']['state_id'],                        'is_active' => 1,                        'created_on' => date("Y-m-d H:i:s"),                        'created_by' => $this->Auth->user('id'),                    );                    if ($this->{$this->modelClass}->save($datas)) {                        $this->loadModel('LanguageMapDistrict');                        $latest_id = $this->{$this->modelClass}->id;                        $languageStates = $this->data['LanguageMapDistrict'];                        $i = 0;                        foreach ($languageStates as $lang_id => $ldata) {                            $datas2 = array();                            $this->LanguageMapDistrict->create();                            $datas2['LanguageMapDistrict']['content'] = $ldata['name'];                            $datas2['LanguageMapDistrict']['district_id'] = $latest_id;                            $datas2['LanguageMapDistrict']['language_id'] = $lang_id;                            $i++;                            $this->LanguageMapDistrict->save($datas2);                        }                        $this->Session->setFlash('District has been added.', 'success');                        $this->redirect(array('action' => 'index'));                    }                } else {                    $this->Session->setFlash('Sorry, You have already entered this district name', 'error');                    $this->redirect(array('action' => 'add'));                }            } else {                $this->Session->setFlash('Enter in English.', 'error');                $this->redirect(array('action' => 'add'));            }            //}        }        $this->set('title_for_layout', 'Add New District');    }    function edit($id = null) {        $this->set('id', $id);        $user = $this->{$this->modelClass}->findById($id);        $lanArr = array();        if (!empty($user)) {            $statl = $user['LanguageMapDistrict'];            foreach ($statl as $new) {                $lanArr[$new['language_id']] = $new;            }        }        $user['LanguageMapDistrict'] = $lanArr;        $this->{$this->modelClass}->set($user);        $this->set('record', $user);        //pr($user);        if (empty($this->data)) {            $this->data = $user;        } else {            $this->{$this->modelClass}->set($this->data);            //if ($this->{$this->modelClass}->validateUpdate()) {            if (!empty($this->data['LanguageMapDistrict']) && $this->data['LanguageMapDistrict'][1]['content']) {                $datas = array(                    'name' => $this->data['LanguageMapDistrict'][1]['content'],                    'modified_on' => date("Y-m-d H:i:s"),                    'modified_by' => $this->Auth->user('id'),                );                if ($this->{$this->modelClass}->save($datas)) {                    $this->loadModel('LanguageMapDistrict');                    $latest_id = $id;                    $this->LanguageMapDistrict->deleteAll(array("LanguageMapDistrict.district_id" => $latest_id));                    $languageStates = $this->data['LanguageMapDistrict'];                    $i = 0;                    foreach ($languageStates as $lang_id => $ldata) {                        $datas2 = array();                        $this->LanguageMapDistrict->create();                        $datas2['LanguageMapDistrict']['content'] = $ldata['content'];                        $datas2['LanguageMapDistrict']['district_id'] = $latest_id;                        $datas2['LanguageMapDistrict']['language_id'] = $lang_id;                        $i++;                        $this->LanguageMapDistrict->save($datas2);                    }                    $this->Session->setFlash('District has been updated.', 'success');                    $this->redirect(array('action' => 'index'));                }            }            //}        }        $this->set('title_for_layout', 'Update District');    }    public function change_status() {        if ($this->request->is('Ajax')) {            if ($this->data['id'] != null) {                $data['is_active'] = $this->data['status'] == 1 ? false : true;                $this->{$this->modelClass}->id = $this->data['id'];                $this->{$this->modelClass}->save($data, false);                echo json_encode(array('succ' => 1, 'msg' => 'Status has been changed.'));                die;            }        }        exit;    }}