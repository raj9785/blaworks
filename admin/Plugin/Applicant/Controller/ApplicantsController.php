<?phprequire_once APP . 'Vendor' . DS . 'dompdf_new/lib/html5lib/Parser.php';require_once APP . 'Vendor' . DS . 'dompdf_new/lib/php-font-lib/src/FontLib/Autoloader.php';require_once APP . 'Vendor' . DS . 'dompdf_new/lib/php-svg-lib/src/autoload.php';require_once APP . 'Vendor' . DS . 'dompdf_new/src/Autoloader.php';Dompdf\Autoloader::register();use Dompdf\Dompdf;use Dompdf\Options;class ApplicantsController extends ApplicantAppController {    var $name = 'Applicants';    public $helpers = array('Html', 'Form', 'Session', 'Time', 'Text');    // public $presetVars =     true;    public function beforeFilter() {        parent::beforeFilter();        $this->set('model', $this->modelClass);        $this->set('tab_open', 'applicants');        $this->Auth->allow('download_biodata_by_app', 'download_biodata_by_app1');        $this->loadModel('State');        $state_list = $this->State->find('list', array(            'conditions' => array(                'is_active' => 1,            ),        ));        $this->set('state_list', $state_list);    }    function test2() {        $html = $this->render('export');        require_once(APP . 'Vendor' . DS . 'fpdf' . DS . 'html2pdf.php');        //$html = '<bookmark content="Start of the Document" /><div>Section 1 text अक्षय</div>';        $mpdf = new PDF_HTML();        $mpdf->AddPage();        $mpdf->SetFont("Arial", 'B', 18);        $mpdf->WriteHTML($html);        $filename = "BioData_" . time() . ".pdf";        $mpdf->Output($filename, "D");    }    function test() {        $html = $this->render('export');        require_once(APP . 'Vendor' . DS . '/vendor/autoload.php');        //$html = '<bookmark content="Start of the Document" /><div>Section 1 text अक्षय यह एक डेमो टेस्ट है</div>';        $mpdf = new \Mpdf\Mpdf([            'mode' => 'utf-8',            'default_font' => 'dejavusans',        ]);        $mpdf->useLang = true;        $mpdf->autoScriptToLang = true;        $mpdf->autoLangToFont = true;        $mpdf->WriteHTML($html);        //$mpdf->Output();         $filename = "BioData_" . time() . ".pdf";        $mpdf->Output($filename, 'D');    }    function index() {        // Breadcrumb        //pr($this->data);        if (!empty($this->data)) {            $this->Prg->commonProcess();        }        $page = ((isset($this->params->named['page']) && $this->params->named['page'] != "") ? $this->params->named['page'] : 0);        $limitValue = $limit = 50;        $this->set('limitValue', $limitValue);        $this->set('limit', $limit);        $this->{$this->modelClass}->data[$this->modelClass] = $this->passedArgs;        $parsedConditions = $this->{$this->modelClass}->parseCriteria($this->passedArgs);        if (!empty($this->request->query)) {            if (isset($this->request->query['registered_mobile']) && $this->request->query['registered_mobile'] != "") {                array_push($parsedConditions, array('Applicant.registered_mobile' => $this->request->query['registered_mobile']));                $this->set("registered_mobile", $this->request->query['registered_mobile']);            }            if (isset($this->request->query['state_id']) && $this->request->query['state_id'] != "") {                array_push($parsedConditions, array('Applicant.state_id' => $this->request->query['state_id']));                $this->set("state_id", $this->request->query['state_id']);            }        }        $this->paginate = array(            'conditions' => array($parsedConditions),            'limit' => $limit,            'order' => array($this->modelClass . '.id' => 'desc')        );        //pr($this->paginate());        $this->{$this->modelClass}->set($this->passedArgs);        $this->set('result', $this->paginate());        $this->set('page', $page);        $this->set('title_for_layout', 'Applicants');    }    public function export($applicant_id) {        $this->layout = false;        $detail = $this->Applicant->find('first', array(            'conditions' => array(                'Applicant.id' => $applicant_id            ),        ));        //pr($detail); exit;        $this->set('detail', $detail);        $this->exportPdf();    }    public function export1($applicant_id) {        $this->layout = false;        $this->Applicant->virtualFields = array(            'exp_name' => 'select exp.name from applicant_extended_profiles as aep inner join experiences as exp on exp.id=aep.work_experience where aep.applicant_id=Applicant.id',        );        $detail = $this->Applicant->find('first', array(            'conditions' => array(                'Applicant.id' => $applicant_id            ),        ));        //pr($detail); exit;        $this->set('detail', $detail);        $this->test();    }    function exportPdf1() {        $detail = $this->render('export');//        $html_code = "dddddddd";////        $line_colour = 44;//        $text_colour = "";//        $text_color="";//        $line_color="";//        $my_img = imagecreate(200, 80);//        $background = imagecolorallocate($my_img, 0, 0, 255);//        $text_colour = imagecolorallocate($my_img, 255, 255, 0);////$line_colour = imagecolorallocate( $my_img, 128, 255, 0 );//        imagestring($my_img, 4, 30, 25, "$html_code", $text_colour);//        imagesetthickness($my_img, 5);//        imageline($my_img, 30, 45, 165, 45, $line_colour);////        header("Content-type: image/png");//        imagepng($my_img);//        imagecolordeallocate($line_color);//        imagecolordeallocate($text_color);//        imagecolordeallocate($background);//        imagedestroy($my_img);//        exit;        $options = new Options();        $options->set('defaultFont', 'Noto Sans');        $dompdf = new Dompdf(array('enable_remote' => true));        $dompdf->loadHtml($detail);        //$dompdf->loadHtml('अक्षय');        $dompdf->render();        $filename = "BioData_" . time() . ".pdf";        $dompdf->stream($filename);    }    function exportPdf() {        $detail = $this->render('export');        require_once(APP . 'Vendor' . DS . 'dompdf' . DS . 'dompdf_config.inc.php');        try {            $this->dompdf = new DOMPDF();            $papersize = "legal";            $orientation = "landscape";            //$detail = mb_convert_encoding($detail, 'HTML-ENTITIES', 'UTF-8');            $this->dompdf->load_html($detail); //pr($detail);die;            $this->dompdf->render();            $filename = "BioData_" . time() . ".pdf";            $this->dompdf->stream($filename);        } catch (Exception $e) {            echo $e->getMessage();        }    }    function download_biodata_by_app($applicant_id) {        $applicant_id = base64_decode(base64_decode($applicant_id));        $this->export1($applicant_id);    }    function download_biodata_by_app1($applicant_id) {        //$applicant_id=  base64_decode(base64_decode($applicant_id));        $this->export1($applicant_id);    }}