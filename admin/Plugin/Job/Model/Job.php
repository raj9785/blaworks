<?phpclass Job extends JobAppModel {    var $name = 'Job';    public $actsAs = array('Containable', 'Search.Searchable');    // var $actsAs 		= 	array('Tree');    public $filterArgs = array(        array('name' => 'code', 'type' => 'query', 'method' => 'filterQuery'),    );    public function filterQuery($data = array()) {        if (!isset($data['code'])) {            return array();        }        $query = $data['code'];        return array(            'Job.code' => $query        );    }    public $validate = array();    public $belongsTo = array(        "Created" => array(            "className" => "User",            "foreignKey" => "created_by",            'fields' => array("id", "firstname", "lastname"),        ),        "Modified" => array(            "className" => "User",            "foreignKey" => "modified_by",            'fields' => array("id", "firstname", "lastname"),        ),        "State" => array(            "className" => "State",            "foreignKey" => "state_id",            'fields' => array("id", "name"),        ),        "JobCategory" => array(            "className" => "JobCategory",            "foreignKey" => "job_category_id",            'fields' => array("id", "title"),        ),    );    public $hasMany = array(        'LanguageMapJob',        'JobDetail',        'JobEducation',    );    public function validateAdd() {        $my_validate = array(            'code' => array(                'valid' => array(                    'rule' => 'notEmpty',                    'required' => true,                    'allowEmpty' => false,                    'on' => 'create',                    'message' => 'Please enter code .'                ),                'mustUnique' => array(                    'rule' => 'isUnique',                    'message' => __('This value is already exist.'),                )            )        );        $this->validate = $my_validate;        return $this->validates();    }    public function validateUpdate() {        $my_validate = array(            'code' => array(                'valid' => array(                    'rule' => 'notEmpty',                    'required' => true,                    'allowEmpty' => false,                    'on' => 'update',                    'message' => 'Please enter code .'                ),                'mustUnique' => array(                    'rule' => 'isUnique',                    'message' => __('This value is already exist.'),                )            )        );        $this->validate = $my_validate;        return $this->validates();    }}?>