<?phpclass AccessRightUser extends AccessRightUserAppModel {    var $name = 'AccessRightUser';    public $actsAs = array('Containable', 'Search.Searchable');    public $belongsTo = array('AccessRightCategory' => array('className' => 'AccessRightCategory', 'foreignkey' => 'access_right_category_id'));	   public $filterArgs = array(        array('name' => 'access_right_category_id','type' => 'query', 'method' => 'rightcategoryfilterQuery'),        array('name' => 'username', 'type' => 'query', 'method' => 'usernamefilterQuery'),        array('name' => 'employee_id','type' => 'query', 'method' => 'employeefilterQuery'),		array('name' => 'email','type' => 'query', 'method' => 'emailfilterQuery'),		array('name' => 'firstname','type' => 'query', 'method' => 'firstnamelfilterQuery'),	               );			public function rightcategoryfilterQuery($data = array()) {	if (!isset($data['access_right_category_id'])) {	    return array();	}	$query = $data['access_right_category_id'];	if ($query) {	    return array(		'OR' => array(		    'AccessRightUser.access_right_category_id' => $query		)	    );	} else {	    return array();	}    }	public function usernamefilterQuery($data = array()) {	if (!isset($data['username'])) {	    return array();	}	$query = $data['username'];	if ($query) {	    return array(		'OR' => array(		    'AccessRightUser.username LIKE ' => "%" . $query ."%"		)	    );	} else {	    return array();	}    }		public function employeefilterQuery($data = array()) {	if (!isset($data['employee_id'])) {	    return array();	}	$query = $data['employee_id'];	if ($query) {	    return array(		'OR' => array(		    'AccessRightUser.employee_id LIKE ' => "%" . $query ."%"		)	    );	} else {	    return array();	}    }	public function firstnamelfilterQuery($data = array()) {	if (!isset($data['firstname'])) {	    return array();	}	$query = $data['firstname'];	if ($query) {	    return array(		'OR' => array(		    'AccessRightUser.firstname LIKE ' => "%" . $query ."%"		)	    );	} else {	    return array();	}    }		public function emailfilterQuery($data = array()) {	if (!isset($data['email'])) {	    return array();	}	$query = $data['email'];	if ($query) {	    return array(		'OR' => array(		    'AccessRightUser.email LIKE ' => "%" . $query ."%"		)	    );	} else {	    return array();	}    }		    function CheckValidUser() {	$validate1 = array(	    'username' => array(		'valid' => array(		    'rule' => 'notEmpty',		    'required' => true,		    'allowEmpty' => false,		    'message' => 'Please enter username'		),		'mustUnique' => array(		    'rule' => 'isUnique',		    //'on'=>'create',		    'message' => 'This username is already exist',		),	    ),	    'employee_id' => array(		'valid' => array(		    'rule' => 'notEmpty',		    'required' => true,		    'allowEmpty' => false,		    'message' => 'Please enter Employee ID'		),		'mustUnique' => array(		    'rule' => 'isUnique',		    //'on'=>'create',		    'message' => 'This Employee ID is already exist',		),	    ),	    'mobile' => array(		'valid' => array(		    'rule' => 'notEmpty',		    'required' => true,		    'allowEmpty' => false,		    'message' => 'Please enter Mobile'		),		'mustUnique' => array(		    'rule' => 'isUnique',		    //'on'=>'create',		    'message' => 'This Mobile is already exist',		),	    ),	    'email' => array(		'valid' => array(		    'rule' => 'notEmpty',		    'required' => true,		    'allowEmpty' => false,		    'message' => 'Please enter Email'		),		'mustBeEmail' => array(		    'rule' => array('email'),		    'message' => 'Please enter valid email',		    'last' => true		),		'mustUnique' => array(		    'rule' => 'isUnique',		    //'on'=>'create',		    'message' => 'This Email is already exist',		),	    )	);	$this->validate = $validate1;	return $this->validates();    }}?>